import java.util.HashMap;
import java.util.Map;

public class Token {
    public static enum PerlTokens {
        ADDITION, SUBTRACTION, MULTIPLICATION, POWER, DIVISION, INTEGER_DIVISION, MODULO, DIVISIBILITY,
        GCD, LCM, NUMERIC_EQUAL, NUMERIC_NOT_EQUAL, NUMERIC_LESS_THAN, NUMERIC_GREATER_THAN,
        NUMERIC_LESS_THAN_OR_EQUAL, NUMERIC_GREATER_THAN_OR_EQUAL, NUMERIC_THREE_WAY_COMPARATOR,
        STRING_EQUAL, STRING_NOT_EQUAL, STRING_LESS_THAN, STRING_GREATER_THAN,
        STRING_LESS_THAN_OR_EQUAL, STRING_GREATER_THAN_OR_EQUAL, STRING_THREE_WAY_COMPARATOR,
        SMART_THREE_WAY_COMPARATOR, ASSIGNMENT, BINDING, STRING_CONCATIONATION, STRING_REPLICATION, SMART_MATCH,
        INCREMENT, DECREMENT,

        COERCE,

        RANGE_CONCTRUCTOR, LAZY_LIST_CONSTRUCTOR,

        FLATTENING,

        SCALAR_VAR, ARRAY_VAR, HASH_VAR,

        MY_KEYWORD, DEFAULT_KEYWORD, ELSE_KEYWORD, ELSEIF_KEYWORD, FOR_KEYWORD, GET_KEYWORD,
        GIVEN_KEYWORD, IF_KEYWORD, LOOP_KEYWORD, MULTI_KEYWORD, ORWITH_KEYWORD, PRINT_KEYWORD,
        REPEAT_KEYWORD, RETURN_KEYWORD, SAY_KEYWORD, SUB_KEYWORD, UNLESS_KEYWORD, UNTIL_KEYWORD,
        WHEN_KEYWORD, WHILE_KEYWORD, WITH_KEYWORD, WITHOUT_KEYWORD, NOT_KEYWORD, RUN_KEYWORD, SHELL_KEYWORD,
        SLURP_KEYWORD, SPURT_KEYWORD, MKDIR_KEYWORD, RMDIR_KEYWORD,


        LEFT_SQ_BRACKETS, RIGHT_SQ_BRACKETS, LEFT_PARENTH, RIGHT_PARENTH, LEFT_ANG_RACKET, RIGHT_AND_RACKET,
        DOT, COMMA, COLUMN,
        SEMOCOLUMN,

        // can be return, returns or -->
        RETURN,

        IMPLICATION,// =>
        FORWARD_FEED, // ==>
        BACKWARD_FEED, // <==
        HYPER_OPERATOR, // >>

        ARROW, //->
        TYPE,

        STRING, INTEGER, RATIONAL, BOOLEAN,

        MUTATOR_CALL, FUNCTION_CALL,

        QUESTION_MARK, EXCLAMATION_MARK,



    }

    private static HashMap<String, Token> tokenMap;

    public static HashMap<String, Token> getTokenMapSingleton(){
        if (tokenMap == null) {
            tokenMap = new HashMap<>();

        }
        return tokenMap;
    }
}
